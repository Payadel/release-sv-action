name: 'build-test'
on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - main
      - dev
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - run: |
          npm install

      - name: Run All
        run: |
          export NODE_OPTIONS=--openssl-legacy-provider
          npm run all

  test: # make sure the action works on a clean machine without building
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run action without inputs
        uses: ./
        id: release_without_inputs
        with:
          is-test-mode: true

      - name: Validate default values
        uses: Payadel/assert@v1.0.0
        with:
          fail-fast: false
          verbose: true
          inputs: |
            - name: is test mode
              type: True
              input: ${{ steps.release_without_inputs.outputs.isTestMode }}
            - name: git email
              type: Equals
              expected: github-action@github.com
              actual: ${{ steps.release_without_inputs.outputs.gitEmail }}
            - name: gitusername
              type: Equals
              expected: Github Action
              actual: ${{ steps.release_without_inputs.outputs.gitUsername }}
            - name: skip changelog
              type: True
              input: ${{ steps.release_without_inputs.outputs.skipChangelog }}
            - name: skip release file
              type: True
              input: ${{ steps.release_without_inputs.outputs.skipReleaseFile }}
            - name: release directory
              type: Equals
              expected: .
              actual: ${{ steps.release_without_inputs.outputs.releaseDirectory }}
            - name: create pr for branch
              type: Equals
              expected: ''
              actual: ${{ steps.release_without_inputs.outputs.createPrForBranchName }}
            - name: release command
              type: Equals
              expected: standard-version --skip.changelog
              actual: ${{ steps.release_without_inputs.outputs.releaseCommand }}
            - name: release file name
              type: Equals
              expected: standard-version --skip.changelog
              actual: ${{ steps.release_without_inputs.outputs.releaseFileName }}

      - name: Run action with inputs
        uses: ./
        id: release_with_inputs
        with:
          is-test-mode: true
          git-email: fake@fake.com
          git-user-name: "fake name"
          version: 100.100.100
          skip-changelog: false
          skip-release-file: false
          release-directory: .
          release-file-name: fake-name
          create-pr-for-branch: branch-name

      - name: Validate with input
        uses: Payadel/assert@v1.0.0
        with:
          fail-fast: false
          verbose: true
          inputs: |
            - name: is test mode
              type: True
              input: ${{ steps.release_with_inputs.outputs.isTestMode }}
            - name: git email
              type: Equals
              expected: fake@fake.com
              actual: ${{ steps.release_with_inputs.outputs.gitEmail }}
            - name: git user name
              type: Equals
              expected: fake name
              actual: ${{ steps.release_with_inputs.outputs.gitUsername }}
            - name: skip changelog
              type: False
              input: ${{ steps.release_with_inputs.outputs.skipChangelog }}
            - name: skip release file
              type: False
              input: ${{ steps.release_with_inputs.outputs.skipReleaseFile }}
            - name: release directory
              type: Equals
              expected: '.'
              actual: ${{ steps.release_with_inputs.outputs.releaseDirectory }}
            - name: create pr for branch
              type: Equals
              expected: 'branch name'
              actual: ${{ steps.release_with_inputs.outputs.createPrForBranchName }}
            - name: release command
              type: Equals
              expected: standard-version --release-as 100.100.100
              actual: ${{ steps.release_with_inputs.outputs.releaseCommand }}
            - name: release file name
              type: Equals
              expected: fake-name.zip
              actual: ${{ steps.release_with_inputs.outputs.releaseFileName }}
            - name: version
              type: Equals
              expected: 100.100.100
              actual: ${{ steps.release_with_inputs.outputs.releaseFileName }}
